name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Create plugin zip
        run: |
          VERSION="${GITHUB_REF#refs/tags/v}"
          DIR="dariobalinzo-kafka-connect-elasticsearch-source-$VERSION"
          ZIP="dariobalinzo-kafka-connect-elasticsearch-source-$VERSION.zip"
          mkdir -p "$DIR/lib" "$DIR/etc" "$DIR/doc" "$DIR/assets"
          cp manifest.json "$DIR/"
          cp etc/quickstart-elasticsearch-source.properties "$DIR/etc/"
          JAR=$(ls target/elastic-source-connect-*-jar-with-dependencies.jar | head -n 1)
          cp "$JAR" "$DIR/lib/"
          cp assets/dariobalinzo.png "$DIR/assets/" || true
          cp doc/LICENSE "$DIR/doc/" || true
          cp doc/README.md "$DIR/doc/" || true
          zip -r "$ZIP" "$DIR/"
          echo "JAR_PATH=$DIR/lib/$(basename "$JAR")" >> $GITHUB_ENV
          echo "ZIP_PATH=$ZIP" >> $GITHUB_ENV

      - name: Get release by tag
        id: get_release
        uses: actions/github-script@v7
        with:
          script: |
            const tag = context.ref.replace('refs/tags/', '');
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const release = releases.data.find(r => r.tag_name === tag);
            if (!release) {
              throw new Error(`Release for tag ${tag} not found`);
            }
            core.setOutput('upload_url', release.upload_url);

      - name: Upload JAR
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ env.JAR_PATH }}
          asset_name: kafka-connect-elasticsearch-source-${{ github.ref_name }}.jar
          asset_content_type: application/java-archive

      - name: Upload Plugin ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ env.ZIP_PATH }}
          asset_name: kafka-connect-elasticsearch-source-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload CHANGELOG
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: CHANGELOG.md
          asset_name: CHANGELOG.md
          asset_content_type: text/markdown